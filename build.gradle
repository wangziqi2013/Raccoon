/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'patrick' at '21.06.15 16:57' with Gradle 2.3
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.3/userguide/tutorial_java_projects.html
 */


plugins {
  id "edu.sc.seis.launch4j" version "1.5.1"
}


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'edu.sc.seis.launch4j'


// Settings
sourceCompatibility = 1.6
targetCompatibility = 1.6



// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


task fatJar(type: Jar) {
    manifest {
      // version must be supplied via '-Pversion=' on the commandline
      attributes 'Implementation-Version': version, 'Main-Class': 'de.onyxbits.raccoon.App'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*', 'META-INF/maven/'
    with jar
}


copyL4jLib.dependsOn fatJar
launch4j {
  externalLaunch4j = false
  copyConfigurable = project.tasks.fatJar.outputs.files
  outfile = 'Raccoon-' +version +'.exe'
  mainClassName = 'de.onyxbits.raccoon.Main'
  opt='-Dswing.defaultlaf=com.sun.java.swing.plaf.windows.WindowsLookAndFeel'
  opt='-Djava.net.preferIPv4Stack=true'
  jar = "lib/${project.tasks.fatJar.archiveName}"
  icon= '../../icon.ico'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    // compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'net.dongliu:apk-parser:2.0.12'
    compile 'org.hsqldb:hsqldb:2.3.3'
    compile 'org.eclipse.jetty:jetty-server:8.1.16.v20140903'
    compile 'com.google.zxing:core:3.2.0'
    compile 'commons-codec:commons-codec:1.10'
    compile 'com.google.protobuf:protobuf-java:2.5.0'
    compile 'org.apache.httpcomponents:httpclient:4.2.3'
    compile 'org.apache.httpcomponents:httpcore:4.2.2'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-cli:commons-cli:1.3.1'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}

